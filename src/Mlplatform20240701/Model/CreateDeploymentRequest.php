<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Mlplatform20240701\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class CreateDeploymentRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CreateDeploymentRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'accept_service_traffic' => 'bool',
        'apig_config' => '\Volcengine\Mlplatform20240701\Model\ApigConfigForCreateDeploymentInput',
        'clb_config' => '\Volcengine\Mlplatform20240701\Model\CLBConfigForCreateDeploymentInput',
        'deployment_name' => 'string',
        'description' => 'string',
        'dry_run' => 'bool',
        'priority' => 'int',
        'resource_queue_id' => 'string',
        'roles' => '\Volcengine\Mlplatform20240701\Model\RoleForCreateDeploymentInput[]',
        'service_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'accept_service_traffic' => null,
        'apig_config' => null,
        'clb_config' => null,
        'deployment_name' => null,
        'description' => null,
        'dry_run' => null,
        'priority' => 'int32',
        'resource_queue_id' => null,
        'roles' => null,
        'service_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accept_service_traffic' => 'AcceptServiceTraffic',
        'apig_config' => 'ApigConfig',
        'clb_config' => 'CLBConfig',
        'deployment_name' => 'DeploymentName',
        'description' => 'Description',
        'dry_run' => 'DryRun',
        'priority' => 'Priority',
        'resource_queue_id' => 'ResourceQueueId',
        'roles' => 'Roles',
        'service_id' => 'ServiceId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accept_service_traffic' => 'setAcceptServiceTraffic',
        'apig_config' => 'setApigConfig',
        'clb_config' => 'setClbConfig',
        'deployment_name' => 'setDeploymentName',
        'description' => 'setDescription',
        'dry_run' => 'setDryRun',
        'priority' => 'setPriority',
        'resource_queue_id' => 'setResourceQueueId',
        'roles' => 'setRoles',
        'service_id' => 'setServiceId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accept_service_traffic' => 'getAcceptServiceTraffic',
        'apig_config' => 'getApigConfig',
        'clb_config' => 'getClbConfig',
        'deployment_name' => 'getDeploymentName',
        'description' => 'getDescription',
        'dry_run' => 'getDryRun',
        'priority' => 'getPriority',
        'resource_queue_id' => 'getResourceQueueId',
        'roles' => 'getRoles',
        'service_id' => 'getServiceId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accept_service_traffic'] = isset($data['accept_service_traffic']) ? $data['accept_service_traffic'] : null;
        $this->container['apig_config'] = isset($data['apig_config']) ? $data['apig_config'] : null;
        $this->container['clb_config'] = isset($data['clb_config']) ? $data['clb_config'] : null;
        $this->container['deployment_name'] = isset($data['deployment_name']) ? $data['deployment_name'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['dry_run'] = isset($data['dry_run']) ? $data['dry_run'] : null;
        $this->container['priority'] = isset($data['priority']) ? $data['priority'] : null;
        $this->container['resource_queue_id'] = isset($data['resource_queue_id']) ? $data['resource_queue_id'] : null;
        $this->container['roles'] = isset($data['roles']) ? $data['roles'] : null;
        $this->container['service_id'] = isset($data['service_id']) ? $data['service_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['deployment_name'] === null) {
            $invalidProperties[] = "'deployment_name' can't be null";
        }
        if ($this->container['resource_queue_id'] === null) {
            $invalidProperties[] = "'resource_queue_id' can't be null";
        }
        if ($this->container['service_id'] === null) {
            $invalidProperties[] = "'service_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accept_service_traffic
     *
     * @return bool
     */
    public function getAcceptServiceTraffic()
    {
        return $this->container['accept_service_traffic'];
    }

    /**
     * Sets accept_service_traffic
     *
     * @param bool $accept_service_traffic accept_service_traffic
     *
     * @return $this
     */
    public function setAcceptServiceTraffic($accept_service_traffic)
    {
        $this->container['accept_service_traffic'] = $accept_service_traffic;

        return $this;
    }

    /**
     * Gets apig_config
     *
     * @return \Volcengine\Mlplatform20240701\Model\ApigConfigForCreateDeploymentInput
     */
    public function getApigConfig()
    {
        return $this->container['apig_config'];
    }

    /**
     * Sets apig_config
     *
     * @param \Volcengine\Mlplatform20240701\Model\ApigConfigForCreateDeploymentInput $apig_config apig_config
     *
     * @return $this
     */
    public function setApigConfig($apig_config)
    {
        $this->container['apig_config'] = $apig_config;

        return $this;
    }

    /**
     * Gets clb_config
     *
     * @return \Volcengine\Mlplatform20240701\Model\CLBConfigForCreateDeploymentInput
     */
    public function getClbConfig()
    {
        return $this->container['clb_config'];
    }

    /**
     * Sets clb_config
     *
     * @param \Volcengine\Mlplatform20240701\Model\CLBConfigForCreateDeploymentInput $clb_config clb_config
     *
     * @return $this
     */
    public function setClbConfig($clb_config)
    {
        $this->container['clb_config'] = $clb_config;

        return $this;
    }

    /**
     * Gets deployment_name
     *
     * @return string
     */
    public function getDeploymentName()
    {
        return $this->container['deployment_name'];
    }

    /**
     * Sets deployment_name
     *
     * @param string $deployment_name deployment_name
     *
     * @return $this
     */
    public function setDeploymentName($deployment_name)
    {
        $this->container['deployment_name'] = $deployment_name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets dry_run
     *
     * @return bool
     */
    public function getDryRun()
    {
        return $this->container['dry_run'];
    }

    /**
     * Sets dry_run
     *
     * @param bool $dry_run dry_run
     *
     * @return $this
     */
    public function setDryRun($dry_run)
    {
        $this->container['dry_run'] = $dry_run;

        return $this;
    }

    /**
     * Gets priority
     *
     * @return int
     */
    public function getPriority()
    {
        return $this->container['priority'];
    }

    /**
     * Sets priority
     *
     * @param int $priority priority
     *
     * @return $this
     */
    public function setPriority($priority)
    {
        $this->container['priority'] = $priority;

        return $this;
    }

    /**
     * Gets resource_queue_id
     *
     * @return string
     */
    public function getResourceQueueId()
    {
        return $this->container['resource_queue_id'];
    }

    /**
     * Sets resource_queue_id
     *
     * @param string $resource_queue_id resource_queue_id
     *
     * @return $this
     */
    public function setResourceQueueId($resource_queue_id)
    {
        $this->container['resource_queue_id'] = $resource_queue_id;

        return $this;
    }

    /**
     * Gets roles
     *
     * @return \Volcengine\Mlplatform20240701\Model\RoleForCreateDeploymentInput[]
     */
    public function getRoles()
    {
        return $this->container['roles'];
    }

    /**
     * Sets roles
     *
     * @param \Volcengine\Mlplatform20240701\Model\RoleForCreateDeploymentInput[] $roles roles
     *
     * @return $this
     */
    public function setRoles($roles)
    {
        $this->container['roles'] = $roles;

        return $this;
    }

    /**
     * Gets service_id
     *
     * @return string
     */
    public function getServiceId()
    {
        return $this->container['service_id'];
    }

    /**
     * Sets service_id
     *
     * @param string $service_id service_id
     *
     * @return $this
     */
    public function setServiceId($service_id)
    {
        $this->container['service_id'] = $service_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

